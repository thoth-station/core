apiVersion: v1
kind: Template
labels:
  template: thoth-core
  thoth: 0.1.0
metadata:
  name: thoth-core
  annotations:
    description: This is Thoth Core - Analyzer and Results API and supporting components 
    openshift.io/display-name: Thoth Core
    version: 0.1.0
    tags: poc,thoth,ai-stacks
    template.openshift.io/documentation-url: https://github.com/AICoE/Thoth/
    template.openshift.io/long-description: This template defines resources needed to deploy Thoth Core Services as a Proof-of-Concept to OpenShift.
    template.openshift.io/provider-display-name: Red Hat, Inc.

objects:

## Service Accounts
- kind: ServiceAccount
  apiVersion: v1
  metadata:
    name: analyzer
    namespace: ${THOTH_FRONTEND_NAMESPACE}
    app: thoth-core
  automountServiceAccountToken: true

- apiVersion: v1
  kind: RoleBinding
  metadata:
    name: role-jobs-binding
    namespace: ${THOTH_MIDDLEEND_NAMESPACE}
    labels:
      app: thoth-core
  roleRef:
    kind: ClusterRole
    name: edit
  subjects:
    - kind: ServiceAccount
      name: analyzer
      namespace: ${THOTH_FRONTEND_NAMESPACE}
#
# Services
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      service: user-api
      app: thoth-core
    name: user-api
    namespace: ${THOTH_FRONTEND_NAMESPACE}
  spec:
    ports:
    - port: 80
      protocol: TCP
      targetPort: 8080
    selector:
      service: user-api

- apiVersion: v1
  kind: Service
  metadata:
    labels:
      service: result-api
      app: thoth-core
    name: result-api
    namespace: ${THOTH_MIDDLEEND_NAMESPACE}
  spec:
    ports:
    - port: 80
      protocol: TCP
      targetPort: 8080
    selector:
      service: result-api

#
# Routes
- kind: Route
  apiVersion: v1
  metadata:
    name: user-api
    namespace: ${THOTH_FRONTEND_NAMESPACE}
    labels:
      app: thoth-core
  spec:
    host: ${THOTH_USER_API_HOSTNAME}
    to:
      kind: Service
      name: user-api

#
# Deployment configs
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      service: user-api
      app: thoth-core
    name: user-api
    namespace: ${THOTH_FRONTEND_NAMESPACE}
  spec:
    replicas: 1
    selector:
      service: user-api
    template:
      metadata:
        labels:
          service: user-api
      spec:
        serviceAccountName: analyzer
        containers:
        - env:
          - name: APP_SERVICE_PORT
            valueFrom:
              configMapKeyRef:
                key: user-api-service-port
                name: thoth
          - name: KUBERNETES_API_URL
            value: 'https://kubernetes.default.svc.cluster.local'
          - name: KUBERNETES_VERIFY_TLS
            value: ${KUBERNETES_VERIFY_TLS}
          - name: THOTH_RESULT_API_HOSTNAME
            value: thoth-result-api
          - name: THOTH_RESULT_API_URL
            value: http://thoth-result-api
          - name: THOTH_MIDDLEEND_POD_CPU_LIMIT
            valueFrom:
              configMapKeyRef:
                key: middletier-pod-cpu-limit
                name: thoth
          - name: THOTH_MIDDLEEND_POD_MEMORY_LIMIT
            valueFrom:
              configMapKeyRef:
                key: middletier-pod-memory-limit
                name: thoth
          - name: THOTH_MIDDLEEND_NAMESPACE
            valueFrom:
              configMapKeyRef:
                key: middletier-namespace
                name: thoth
          - name: THOTH_BACKEND_NAMESPACE
            valueFrom:
              configMapKeyRef:
                key: backend-namespace
                name: thoth
          - name: THOTH_DEPLOYMENT_NAME
            valueFrom:
              configMapKeyRef:
                key: storage-bucket-name
                name: thoth
          - name: THOTH_CEPH_HOST
            valueFrom:
              configMapKeyRef:
                key: ceph-host
                name: thoth
          - name: THOTH_CEPH_BUCKET
            valueFrom:
              configMapKeyRef:
                key: ceph-bucket-name
                name: thoth
          - name: THOTH_CEPH_BUCKET_PREFIX
            valueFrom:
              configMapKeyRef:
                key: ceph-bucket-prefix
                name: thoth
          - name: THOTH_SECRET
            valueFrom:
              secretKeyRef:
                name: thoth
                key: thoth-secret
          - name: THOTH_JANUSGRAPH_HOST
            value: janusgraph
          - name: THOTH_JANUSGRAPH_PORT
            value: '80'
          - name: THOTH_USER_API_APP_SECRET_KEY
            valueFrom:
              secretKeyRef:
                name: thoth
                key: app-secret-key
          - name: THOTH_CEPH_KEY_ID
            valueFrom:
              secretKeyRef:
                name: thoth
                key: ceph-key-id
          - name: THOTH_CEPH_SECRET_KEY
            valueFrom:
              secretKeyRef:
                name: thoth
                key: ceph-secret-key
          name: user-api
          ports:
            - containerPort: 8080
              protocol: TCP
          resources:
            requests:
              memory: "128Mi"
              cpu: "125m"
            limits:
              memory: "256Mi"
              cpu: "500m"
          readinessProbe:
            httpGet:
              path: '/readiness'
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 10
          livenessProbe:
            httpGet:
              path: '/liveness'
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 60
            timeoutSeconds: 10
    test: false
    triggers:
    - type: ConfigChange
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
          - user-api
        from:
          kind: ImageStreamTag
          name: 'user-api:latest'

- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      service: result-api
      app: thoth-core
    name: result-api
    namespace: ${THOTH_MIDDLEEND_NAMESPACE}
  spec:
    replicas: 1
    selector:
      service: result-api
    template:
      metadata:
        labels:
          service: result-api
      spec:
        containers:
        - name: result-api
          env:
          - name: THOTH_DEPLOYMENT_NAME
            valueFrom:
              configMapKeyRef:
                key: storage-bucket-name
                name: thoth
          - name: THOTH_PERSISTENT_VOLUME_PATH
            valueFrom:
              configMapKeyRef:
                key: ceph-results-path
                name: thoth
          - name: THOTH_CEPH_HOST
            valueFrom:
              configMapKeyRef:
                key: ceph-host
                name: thoth
          - name: THOTH_CEPH_BUCKET
            valueFrom:
              configMapKeyRef:
                key: ceph-bucket-name
                name: thoth
          - name: THOTH_CEPH_BUCKET_PREFIX
            valueFrom:
              configMapKeyRef:
                key: ceph-bucket-prefix
                name: thoth
          - name: THOTH_CEPH_KEY_ID
            valueFrom:
              secretKeyRef:
                name: thoth
                key: ceph-key-id
          - name: THOTH_CEPH_SECRET_KEY
            valueFrom:
              secretKeyRef:
                name: thoth
                key: ceph-secret-key
          ports:
            - containerPort: 8080
              protocol: TCP
          resources:
            requests:
              memory: "128Mi"
              cpu: "125m"
            limits:
              memory: "256Mi"
              cpu: "500m"
          readinessProbe:
            httpGet:
              path: '/readiness'
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 10
          livenessProbe:
            httpGet:
              path: '/liveness'
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 60
            timeoutSeconds: 10
    test: false
    triggers:
    - type: ConfigChange
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
          - result-api
        from:
          kind: ImageStreamTag
          name: 'result-api:latest'

#
# Cron jobs
- apiVersion: batch/v2alpha1
  kind: CronJob
  metadata:
    name: cleanup
    namespace: ${THOTH_FRONTEND_NAMESPACE}
    labels:
      app: thoth-core
  spec:
    schedule: "@weekly"
    suspend: true
    jobTemplate:
      spec:
        template:
          spec:
            serviceAccountName: analyzer
            containers:
            - image: cleanup-cronjob
              name: cleanup
              env:
               - name: KUBERNETES_VERIFY_TLS
                 value: ${KUBERNETES_VERIFY_TLS}
               - name: THOTH_ANALYZER_CLEANUP_TIME
                 valueFrom:
                  configMapKeyRef:
                    key: analyzer-cleanup-time
                    name: thoth
               - name: KUBERNETES_API_URL
                 value: 'https://kubernetes.default.svc.cluster.local'
               - name: THOTH_CLEANUP_DEBUG
                 valueFrom:
                  configMapKeyRef:
                    key: debug-cleanup
                    name: thoth
               - name: THOTH_MIDDLEEND_NAMESPACE
                 valueFrom:
                   configMapKeyRef:
                     key: middletier-namespace
                     name: thoth
              resources:
                requests:
                  memory: "32Mi"
                  cpu: "100m"
                limits:
                  memory: "128Mi"
                  cpu: "250m"
            restartPolicy: OnFailure

- apiVersion: batch/v2alpha1
  kind: CronJob
  metadata:
    name: graph-sync
    namespace: ${THOTH_BACKEND_NAMESPACE}
    labels:
      app: thoth-core
  spec:
    schedule: "@hourly"
    suspend: true
    jobTemplate:
      spec:
        template:
          spec:
            containers:
            - image: graph-sync-cronjob
              name: graph-sync
              env:
              - name: THOTH_JANUSGRAPH_HOST
                value: janusgraph
              - name: THOTH_JANUSGRAPH_PORT
                value: '80'
              - name: THOTH_SYNC_OBSERVATIONS
                valueFrom:
                  configMapKeyRef:
                    key: sync-observations
                    name: thoth
              - name: THOTH_CEPH_HOST
                valueFrom:
                  configMapKeyRef:
                    key: ceph-host
                    name: thoth
              - name: THOTH_CEPH_BUCKET
                valueFrom:
                  configMapKeyRef:
                    key: ceph-bucket-name
                    name: thoth
              - name: THOTH_CEPH_BUCKET_PREFIX
                valueFrom:
                  configMapKeyRef:
                    key: ceph-bucket-prefix
                    name: thoth
              - name: THOTH_CEPH_KEY_ID
                valueFrom:
                  secretKeyRef:
                    name: thoth
                    key: ceph-key-id
              - name: THOTH_CEPH_SECRET_KEY
                valueFrom:
                  secretKeyRef:
                    name: thoth
                    key: ceph-secret-key
              resources:
                requests:
                  memory: "128Mi"
                  cpu: "125m"
                limits:
                  memory: "256Mi"
                  cpu: "500m"
            restartPolicy: Never

#
# Image streams
- apiVersion: v1
  kind: ImageStream
  metadata:
    name: python
    namespace: ${THOTH_FRONTEND_NAMESPACE}
    annotations:
      openshift.io/display-name: Python
  spec:
    tags:
      - name: "latest"
        annotations:
          iconClass: icon-python
          supports: python:3.6,python
          version: "latest"
        from:
          kind: DockerImage
          name: docker.io/centos/python-36-centos7:latest

- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      app: thoth-core
    name: result-api
    namespace: ${THOTH_MIDDLEEND_NAMESPACE}
  spec:
    name: latest

- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      app: thoth-core
    name: user-api
    namespace: ${THOTH_FRONTEND_NAMESPACE}
  spec:
    name: latest

#
# Build configs
- apiVersion: v1
  kind: BuildConfig
  metadata:
    name: result-api
    namespace: ${THOTH_MIDDLEEND_NAMESPACE}
    labels:
      app: thoth-core
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: result-api:latest
    source:
      type: Git
      git:
        uri: ${THOTH_RESULT_API_GIT_URL}
      secrets: []
    strategy:
      sourceStrategy:
        from:
          kind: ImageStreamTag
          name: python:latest
          namespace: ${THOTH_FRONTEND_NAMESPACE}
      type: Source
    triggers:
    - github:
        secret: ${THOTH_RESULT_API_GITHUB_SECRET}
      type: GitHub
    - type: ConfigChange
    - imageChange: {}
      type: ImageChange


parameters:
- description: A hostname where Thoth's Analyzer API should be exposed (will be auto-generated if empty).
  displayName: Thoth user API hostname
  required: false
  name: THOTH_USER_API_HOSTNAME

- description: A hostname where Thoth's Result API should be exposed (will be auto-generated if empty).
  displayName: Thoth result API hostname
  required: false
  name: THOTH_RESULT_API_HOSTNAME

- description: Name of the Thoth Frontend Namespace
  displayName: Thoth Frontend Namespace
  required: true
  name: THOTH_FRONTEND_NAMESPACE

- description: Name of the Thoth Middle Tier Namespace
  displayName: Thoth Middle Tier Namespace
  required: true
  name: THOTH_MIDDLEEND_NAMESPACE

- description: Name of the Thoth Backend Namespace
  displayName: Thoth Backend Namespace
  required: true
  name: THOTH_BACKEND_NAMESPACE

- description: Git repository for Thoth's Result API
  displayName: Thoth result-api Git
  required: true
  name: THOTH_RESULT_API_GIT_URL
  value: 'https://github.com/fridex/thoth-result-api'

- description: Git repository for Thoth's Analyzer API
  displayName: Thoth analyzer-api Git
  required: true
  name: THOTH_USER_API_GIT_URL
  value: 'https://github.com/fridex/thoth-user-api'

- description: A secret for build user-facing API triggered by GitHub
  displayName: GitHub Webhook secret for user-facing API
  required: true
  # see: https://docs.openshift.com/container-platform/3.6/dev_guide/builds/triggering_builds.html#github-webhooks
  name: THOTH_USER_API_GITHUB_SECRET
  value: 'secret101'

- description: A secret for build result API triggered by GitHub
  displayName: GitHub Webhook secret for result API
  required: true
  name: THOTH_RESULT_API_GITHUB_SECRET
  value: 'secret101'

- description: Time before analyzer pod gets removed from etcd.
  displayName: Thoth analyzer cleanup time
  required: true
  name: THOTH_ANALYZER_CLEANUP_TIME
  value: '7d'

- description: Be verbose in cluster cleanup job.
  displayName: Debug cleanup job
  required: true
  name: THOTH_CLEANUP_DEBUG
  value: '1'

- description: Turn on or off automatic observation syncing to the graph database.
  displayName: Sync observations
  required: true
  name: THOTH_SYNC_OBSERVATIONS
  value: '0'

- description: Verify TLS certificates of Kubernetes master on requests.
  displayName: Verify Kubernetes TLS
  required: true
  name: KUBERNETES_VERIFY_TLS
  value: '0'

- description: Storage bucket name to use for persisted files
  displayName: Thoth Storage bucket name
  required: true
  value: thoth-test
  name: THOTH_DEPLOYMENT_NAME